---
globs: *api*.py,*endpoint*.py
description: API implementation rules
---
## API Rules

### Framework
- Use FastAPI for API server implementation.
- Follow RESTful conventions as defined in [IMPLEMENTATION.md](mdc:IMPLEMENTATION.md).
- Use Pydantic for request/response validation.

### Endpoints
- `GET /api/v1/logos/{infomax_code}`: Logo retrieval with format and size parameters.
- `POST /api/v1/admin/logos/upload`: Admin logo upload.
- `DELETE /api/v1/admin/logos/{infomax_code}`: Admin logo deletion.
- `GET /api/v1/progress/{job_id}`: Progress monitoring.
- `POST /api/v1/exports/logos`: Bulk export functionality.

### Response Format
- Use consistent JSON response format.
- Include proper HTTP status codes.
- Implement proper error handling and error responses.
- Use appropriate content types for different responses.

### Authentication
- Implement proper authentication for admin endpoints.
- Use JWT tokens for API authentication.
- Implement role-based access control.

### Rate Limiting
- Implement rate limiting for API endpoints.
- Use appropriate rate limiting strategies.
- Handle rate limit exceeded responses properly.

### Documentation
- Use FastAPI's automatic documentation generation.
- Provide clear API documentation.
- Include example requests and responses.
- Document all parameters and response formats.