---
globs: *crawler*.py,*crawl*.py
description: Crawling implementation rules
---
## Crawling Rules

### Technology Stack
- Use Playwright for TradingView crawling, not Selenium.
- Use aiohttp for HTTP requests, not requests.
- Use fake_useragent for User-Agent rotation.
- Follow implementation patterns in [CRAWLER.md](mdc:CRAWLER.md).

### TradingView Crawling
- Use CSS selectors for element selection.
- Implement stealth mode to avoid detection.
- Handle dynamic content loading with proper waits.
- Use random User-Agent strings.

### logo.dev API
- Respect daily limit of 5,000 calls per day.
- Skip logo.dev if quota is exhausted.
- Use parameters: `format=png`, `size=256`, `fallback=404`.
- Get token from `LOGO_DEV_TOKEN` environment variable.

### Image Processing
- Use Pillow for image conversion.
- Convert SVG to PNG/WebP in standard sizes: 64, 128, 256, 512px.
- Implement proper error handling for image processing.
- Save both original and converted images.

### Concurrency
- Use asyncio for concurrent operations.
- Implement proper semaphore for rate limiting.
- Handle connection limits appropriately.
- Use proper error handling for concurrent operations.

### Progress Tracking
- Use file-based progress tracking (JSON files).
- Update progress after each item processing.
- Implement proper error logging.
- Clean up old progress files periodically.